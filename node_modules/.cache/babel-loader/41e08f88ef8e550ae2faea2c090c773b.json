{"ast":null,"code":"var _jsxFileName = \"/home/maicon/\\xC1rea de Trabalho/Area de Trabalho/Projetos/react-estudo/blog/src/components/New/index.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport firebase from '../../firebase';\nimport './new.css';\n\nclass New extends Component {\n  constructor(props) {\n    super(props);\n\n    this.cadastrar = async e => {\n      e.preventDefault();\n\n      if (this.state.titulo !== '' && this.state.imagem !== '' && this.state.descricao !== '' && this.state.imagem !== null && this.state.url !== '') {\n        let posts = firebase.app.ref('posts');\n        let chave = posts.push().key;\n        await posts.child(chave).set({\n          titulo: this.state.titulo,\n          image: this.state.url,\n          descricao: this.state.descricao,\n          autor: localStorage.nome\n        });\n        this.props.history.push('/dashboard');\n      } else {\n        this.setState({\n          alert: 'Preencha todos os campos!'\n        });\n      }\n    };\n\n    this.handleFile = async e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n\n        if (image.type === 'image/png' || image.type === 'image/jpeg') {\n          await this.setState({\n            imagem: image\n          });\n          await this.handleUpload();\n        } else {\n          alert('Envie uma imagem do tipo PNG ou JPG');\n          this.setState({\n            imagem: null\n          });\n          return null;\n        }\n      }\n    };\n\n    this.handleUpload = async () => {\n      const {\n        imagem\n      } = this.state;\n      const currentUid = firebase.getCurrentUid();\n      const uploadTaks = firebase.storage.ref(`images/${currentUid}/${imagem.name}`).put(imagem);\n      await uploadTaks.on('state_changed', snapshot => {\n        //progress\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress\n        });\n      }, error => {\n        //error\n        console.log('Error imagem: ' + error);\n      }, () => {\n        //sucessO!\n        firebase.storage.ref(`images/${currentUid}`).child(imagem.name).getDownloadURL().then(url => {\n          this.setState({\n            url: url\n          });\n        });\n      });\n    };\n\n    this.state = {\n      titulo: '',\n      imagem: null,\n      url: '',\n      descricao: '',\n      alert: '',\n      progress: 0\n    };\n    this.cadastrar = this.cadastrar.bind(this);\n    this.handleFile = this.handleFile.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  componentDidMount() {\n    if (!firebase.getCurrent()) {\n      this.props.history.replace('/');\n      return null;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      id: \"new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"Voltar\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.cadastrar,\n      id: \"new-post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, this.state.alert), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 41\n      }\n    }), this.state.url !== '' ? /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.url,\n      width: \"250\",\n      height: \"150\",\n      alt: \"Capa do post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(\"progress\", {\n      value: this.state.progress,\n      max: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, \"Titulo:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Nome do post\",\n      value: this.state.titulo,\n      autoFocus: true,\n      onChange: e => this.setState({\n        titulo: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 71\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, \"Descri\\xE7\\xE3o:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 36\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      placeholder: \"Alguma descri\\xE7\\xE3o...\",\n      value: this.state.descricao,\n      onChange: e => this.setState({\n        descricao: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 74\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 12\n      }\n    }, \"Cadastrar\")));\n  }\n\n}\n\nexport default withRouter(New);","map":{"version":3,"sources":["/home/maicon/√Årea de Trabalho/Area de Trabalho/Projetos/react-estudo/blog/src/components/New/index.js"],"names":["React","Component","Link","withRouter","firebase","New","constructor","props","cadastrar","e","preventDefault","state","titulo","imagem","descricao","url","posts","app","ref","chave","push","key","child","set","image","autor","localStorage","nome","history","setState","alert","handleFile","target","files","type","handleUpload","currentUid","getCurrentUid","uploadTaks","storage","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","console","log","getDownloadURL","then","bind","componentDidMount","getCurrent","replace","render","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport firebase from '../../firebase';\r\nimport './new.css';\r\n\r\nclass New extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      titulo: '',\r\n      imagem: null,\r\n      url: '',\r\n      descricao: '',\r\n      alert: '',\r\n      progress: 0,\r\n    };\r\n\r\n    this.cadastrar = this.cadastrar.bind(this);\r\n    this.handleFile = this.handleFile.bind(this);\r\n    this.handleUpload = this.handleUpload.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(!firebase.getCurrent()){\r\n      this.props.history.replace('/');\r\n      return null;\r\n    }\r\n  }\r\n\r\n  cadastrar = async(e) =>{\r\n    e.preventDefault();\r\n\r\n    if(this.state.titulo !== '' && \r\n        this.state.imagem !== '' && \r\n        this.state.descricao !== '' &&\r\n        this.state.imagem !== null &&\r\n        this.state.url !== ''){\r\n      let posts = firebase.app.ref('posts');\r\n      let chave = posts.push().key;\r\n      await posts.child(chave).set({\r\n        titulo: this.state.titulo,\r\n        image: this.state.url,\r\n        descricao: this.state.descricao,\r\n        autor: localStorage.nome\r\n      });\r\n\r\n      this.props.history.push('/dashboard');\r\n    }else{\r\n      this.setState({alert: 'Preencha todos os campos!'});\r\n    }\r\n\r\n  }\r\n\r\n  handleFile = async (e) => {\r\n\r\n    if(e.target.files[0]){\r\n      \r\n      const image = e.target.files[0];\r\n\r\n      if(image.type === 'image/png' || image.type === 'image/jpeg'){\r\n        await this.setState({imagem: image});\r\n        await this.handleUpload();\r\n      }else{\r\n        alert('Envie uma imagem do tipo PNG ou JPG');\r\n        this.setState({imagem: null});\r\n        return null;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  handleUpload = async () => {\r\n    const { imagem } = this.state;\r\n    const currentUid = firebase.getCurrentUid();\r\n\r\n    const uploadTaks = firebase.storage\r\n    .ref(`images/${currentUid}/${imagem.name}`)\r\n    .put(imagem);\r\n\r\n    await uploadTaks.on('state_changed', \r\n    (snapshot)=>{\r\n      //progress\r\n      const progress = Math.round(\r\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        this.setState({progress});\r\n    }, \r\n    (error)=>{\r\n      //error\r\n      console.log('Error imagem: ' + error);\r\n    },\r\n    ()=>{\r\n      //sucessO!\r\n      firebase.storage.ref(`images/${currentUid}`)\r\n      .child(imagem.name).getDownloadURL()\r\n      .then(url => {\r\n        this.setState({url: url});\r\n      })\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <header id=\"new\">\r\n          <Link to=\"/dashboard\">Voltar</Link>\r\n        </header>\r\n        <form onSubmit={this.cadastrar} id=\"new-post\">\r\n\r\n          <span>{this.state.alert}</span>\r\n\r\n          <input type=\"file\"\r\n           onChange={this.handleFile} /><br/>\r\n           {this.state.url !== '' ? \r\n            <img src={this.state.url} width=\"250\" height=\"150\" alt=\"Capa do post\"/>\r\n            :\r\n            <progress value={this.state.progress} max=\"100\" />\r\n           }\r\n\r\n          <label>Titulo:</label><br/>\r\n          <input type=\"text\" placeholder=\"Nome do post\" value={this.state.titulo} autoFocus\r\n           onChange={(e)=> this.setState({titulo: e.target.value})} /><br/>\r\n\r\n          <label>Descri√ß√£o:</label><br/>\r\n          <textarea type=\"text\" placeholder=\"Alguma descri√ß√£o...\" value={this.state.descricao}\r\n           onChange={(e)=> this.setState({descricao: e.target.value})} /><br/>\r\n\r\n           <button type=\"submit\">Cadastrar</button>                         \r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(New);"]},"metadata":{},"sourceType":"module"}